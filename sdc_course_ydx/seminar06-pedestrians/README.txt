Ваша задача: дополнить метод solve таким образом, чтобы машина смогла доехать до конца дороги, не пугая пешеходов и не врезаясь в препятствия.

Поведение машины при этом должно быть адекватным с человеческой точки зрения: для оценки представьте, что вы запустили в реальности такой беспилотник. Будут ли довольны пассажиры? Будут ли довольны пешеходы? Исходя из ответов на эти вопросы будет выставлена оценка за задание.

Текстовое описание алгоритма при сдаче не обязательно, но приветствуется и может компенсировать (в баллах) небольшие недочёты в поведении машины.

Если у вас не получается разработать алгоритм, который может доехать до конца дороги, допускается сдача решения, которое едет "хоть как-то". Баллов в этом случае будет начислено "хоть сколько-то", опять же, в зависимости от того, насколько ваше решение лучше разработанного на семинаре.

Для компиляции проекта воспользуйтесь фреймворком QT. Если вы ненавидите C++, вы можете реализовать алгоритм на любом удобном вам языке, однако, в таком случае требуется повторить функционал симулятора из world.h либо реализовать свой симулятор со схожими принципами. Также приложите к решению инструкцию по сборке проекта.

Для использования в классе World предназначены следующие методы/константы:
    static constexpr int ROAD_LENGTH = 10000; -- длина дороги
    static constexpr int LANES_NUMBER = 4; -- количество полос
    static constexpr int LANE_WIDTH = 30; -- ширина полосы

    Car getMyCar() const -- возвращает нашу машину
    double getRoadWidth() const -- возвращает ширину всей дороги
    void makeStep(double a, double df) -- отдаёт команду автомобилю изменять скорость с ускорением a и повернуть руль на df радиан
    vector<DetectedPedestrian> getPedestrians() const -- возвращает пешеходов
    vector<Obstacle> getObstacles() const -- возвращает препятствия
    vector<Crosswalk> getCrosswalks() const -- возвращает переходы

Для использования в классе Car содержатся константы:
    static constexpr double LENGTH = 40;
    static constexpr double WIDTH = 18;
